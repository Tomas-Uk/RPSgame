@page "/"
@using System.Timers;
@implements IDisposable
@using RPSgame.Helpers;


<h1>Lets play Rock Paper & Siccors</h1>
@if (!string.IsNullOrEmpty(resultMessage))
{
<h3 style="color:@resultMessageColor">@resultMessage</h3>
}

<button class="btn btn-info" @onclick="@PlaiyAgain">Play again</button>

<div style="display:flex; justify-content:center; margin:20px;">
    <img src="@oponentHand.Image" class="image" />
</div>

<div style="display:flex; justify-content: space-around;">
    @foreach(var hand in Hands)
    {
        <img src="@hand.Image" class="image selectable-image"@onclick="@(()=> SelectHand(hand))"> 
    }
 
</div>

@code{
    List<GameHand> Hands = new List<GameHand>()
        {
            new GameHand
            {   Selection = OptionRPS.Paper,
                LosesAgainst =OptionRPS.Scissors,
                WinsAgainst=OptionRPS.Rock,
                Image="Images/Paper.jpg"
            },
            new GameHand
            {
                Selection = OptionRPS.Rock,
                LosesAgainst =OptionRPS.Paper,
                WinsAgainst=OptionRPS.Scissors,
                Image="Images/Rock.jpg"
            },
            new GameHand
            {
                Selection = OptionRPS.Scissors,
                LosesAgainst =OptionRPS.Rock,
                WinsAgainst=OptionRPS.Paper,
                Image = "Images/Scissors.jpg"
            },

        };




    Timer timer;
    GameHand oponentHand;
    string resultMessage = string.Empty;
    string resultMessageColor = string.Empty;


    protected override void OnInitialized()
    {
        oponentHand = Hands[0];
        timer = new Timer();
        timer.Interval = (200);
        timer.Elapsed += TimerOnElapsed;
        timer.Start();
    }

    int inedexOponentHand = 0;
    private void TimerOnElapsed(object sender, ElapsedEventArgs e)
    {
        inedexOponentHand = (inedexOponentHand + 1) % Hands.Count;
        oponentHand = Hands[inedexOponentHand];
        StateHasChanged();
    }

    private void SelectHand(GameHand hand)
    {
        timer.Stop();
        var result = hand.PlayAgainst(oponentHand);
        if(result == GameStatus.Victory)
        {
            resultMessage = "Victory";
            resultMessageColor = "green";

        }else if(result == GameStatus.Loss)
        {
            resultMessage = "Lost";
            resultMessageColor = "red";

        }
        else
        {
            resultMessage = "Draw";
            resultMessageColor = "yelow";
        }
    }

    private void PlaiyAgain()
    {
        timer.Start();
        resultMessage = string.Empty;
    }


    public void Dispose()
    {
        if(timer!= null)
        {
            timer.Dispose();
        }
    }
}